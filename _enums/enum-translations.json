{
  "en-US": {
    "_generated-enums_/marty/expressions/bracketkind": {
      "___description___": "Brackets functionality",
      "close": "Close bracket.",
      "none": "Returned for non-bracket symbols.",
      "open": "Open bracket."
    },
    "_generated-enums_/marty/expressions/operatoraffixation": {
      "___description___": "Operator affixation. Prefixation, infixation, suffixation -> affixation. Affix - https://ru.wikipedia.org/wiki/%D0%90%D1%84%D1%84%D0%B8%D0%BA%D1%81, https://en.wikipedia.org/wiki/Affix",
      "postfix": "Postfix mode allowed for operator.",
      "prefix": "Prefix mode allowed for operator."
    },
    "_generated-enums_/marty/expressions/operatorarity": {
      "___description___": "Operators arity - unary, binary, ternary etc. Also holds prefix/postfix attribute for unary operators.",
      "aritymask": "Mask to pick out arity.",
      "binary": "Binary operator. Mutually exclusive with `ternary` and `nAry` flags. Can be combined with `unary`.",
      "fixedaritymask": "Mask to pick out fixed size arity.",
      "nary": "N-arity. Mutually exclusive with other arity flags.",
      "none": "Zero number of operands.",
      "ternary": "Ternary operator. Mutually exclusive with other arity flags.",
      "unary": "Unary operator. Mutually exclusive with `ternary` and `nAry` flags. Can be combined with `binary`.",
      "unarybinary": "Unary or binary operator."
    },
    "_generated-enums_/marty/expressions/operatorassociativity": {
      "___description___": "Operator associativity. Ассоциативность (от лат. associatio) — свойство операций, позволяющее восстановить последовательность их выполнения при отсутствии явных указаний на очерёдность при равном приоритете - left - приоритетнее",
      "left": "left-hand operator  (Left-to-right →) левая ассоциативность, при которой вычисление выражения происходит слева направо.",
      "right": "right-hand operator (Right-to-left ←) правая ассоциативность — справа налево."
    },
    "_generated-enums_/marty/expressions/operatortype": {
      "___description___": "Operator type",
      "functionalcast": "Functional cast.",
      "functioncall": "Function call.",
      "groupping": "Operations groupping for priority raising.",
      "indexation": "Indexation.",
      "simplecast": "Simple (C-like) cast.",
      "templateinstantiation": "Template instantiation."
    }
  }
}